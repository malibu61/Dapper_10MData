@model IPagedList<_Kurs_10_Dapper.ViewModels.GetAllinfoViewModel>

@using X.PagedList.Mvc.Core
@using X.PagedList
<!DOCTYPE html>
<html lang="en">
<head>
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>Charts - Kaiadmin Bootstrap 5 Admin Dashboard</title>
    <meta content="width=device-width, initial-scale=1.0, shrink-to-fit=no"
          name="viewport" />
    <link rel="icon"
          href="/kaiadmin-lite-1.2.0/assets/img/kaiadmin/favicon.ico"
          type="image/x-icon" />

    <!-- Fonts and icons -->
    <script src="/kaiadmin-lite-1.2.0/assets/js/plugin/webfont/webfont.min.js"></script>
    <script>
        WebFont.load({
          google: { families: ["Public Sans:300,400,500,600,700"] },
          custom: {
            families: [
              "Font Awesome 5 Solid",
              "Font Awesome 5 Regular",
              "Font Awesome 5 Brands",
              "simple-line-icons",
            ],
            urls: ["/kaiadmin-lite-1.2.0/assets/css/fonts.min.css"], 
            // urls: ["../assets/css/fonts.min.css"],
          },
          active: function () {
            sessionStorage.fonts = true;
          },
        });
    </script>

    <!-- CSS Files -->
    <link rel="stylesheet" href="/kaiadmin-lite-1.2.0/assets/css/bootstrap.min.css" />
    <link rel="stylesheet" href="/kaiadmin-lite-1.2.0/assets/css/plugins.min.css" />
    <link rel="stylesheet" href="/kaiadmin-lite-1.2.0/assets/css/kaiadmin.min.css" />

    <!-- CSS Just for demo purpose, don't include it in your project -->
    <link rel="stylesheet" href="/kaiadmin-lite-1.2.0/assets/css/demo.css" />
</head>
<body>
    <div class="wrapper">
        <!-- Sidebar -->
       
        <!-- End Sidebar -->

        

        <div class="container">
            <div class="page-inner">
                <h3 class="fw-bold mb-3">Chart.js</h3>
                <div class="page-category">
                    Simple yet flexible JavaScript charting for designers &
                    developers. Please checkout their
                    <a href="http://www.chartjs.org/" target="_blank">full documentation</a>.
                </div>
                <div class="row">
                   
                    @await Component.InvokeAsync("_LineChartComponentPartial")

                    @await Component.InvokeAsync("_BrandPreferredInfoComponentPartial")

                    @await Component.InvokeAsync("_BarChartComponentPartial")

                    @await Component.InvokeAsync("_PieChartComponentPartial")
                    
                    @await Component.InvokeAsync("_DoughnutChartComponentPartial")

                    @await Component.InvokeAsync("_MultipleLineChartComponentPartial")

                    @await Component.InvokeAsync("_MultipleBarChartComponentPartial")



                    


<div class="col-md-12">
    <div class="card">
        <div class="card-header">
            <div class="card-title">Kullanıcı Listesi</div>
        </div>
        <div class="card-body">
            <div style="height: auto;">

                <table class="table table-hovered">
                    <tr>
                        <th>Tarih</th>
                        <th>Ad Soyad</th>
                        <th>Ürün</th>
                        <th>Miktar</th>
                        <th>Birim Fiyat</th>
                        <th>Toplam Fiyat</th>
                        <th>Şehir</th>
                        <th>İlçe</th>
                    </tr>

                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>@item.DATE_.ToShortDateString()</td>
                            <td>@item.NAMESURNAME</td>
                            <td>@item.ITEMNAME</td>
                            <td>@item.AMOUNT</td>
                            <td>@item.PRICE</td>
                            <td>@item.TOTALPRICE</td>
                            <td>@item.CITY</td>
                            <td>@item.TOWN</td>
                        </tr>
                    }
                </table>

            </div>
            <div class="text-center">
                @Html.PagedListPager(Model, page => Url.Action("Index", new { page }),
                         new PagedListRenderOptions
                {
                    DisplayLinkToFirstPage = PagedListDisplayMode.Always,
                    DisplayLinkToLastPage = PagedListDisplayMode.Always,
                    DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
                    DisplayLinkToNextPage = PagedListDisplayMode.Always
                })
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

                    <div class="col-md-6">
                        <div class="card">
                            <div class="card-header">
                                <div class="card-title">Radar Chart</div>
                            </div>
                            <div class="card-body">
                                <div class="chart-container">
                                    <canvas id="radarChart"></canvas>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="card">
                            <div class="card-header">
                                <div class="card-title">Bubble Chart</div>
                            </div>
                            <div class="card-body">
                                <div class="chart-container">
                                    <canvas id="bubbleChart"></canvas>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="card">
                            <div class="card-header">
                                <div class="card-title">Multiple Line Chart</div>
                            </div>
                            <div class="card-body">
                                <div class="chart-container">
                                    <canvas id="multipleLineChart"></canvas>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="card">
                            <div class="card-header">
                                <div class="card-title">Multiple Bar Chart</div>
                            </div>
                            <div class="card-body">
                                <div class="chart-container">
                                    <canvas id="multipleBarChart"></canvas>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-12">
                        <div class="card">
                            <div class="card-header">
                                <div class="card-title">Chart with HTML Legends</div>
                            </div>
                            <div class="card-body">
                                <div class="card-sub">
                                    Sometimes you need a very complex legend. In these cases,
                                    it makes sense to generate an HTML legend. Charts provide
                                    a generateLegend() method on their prototype that returns
                                    an HTML string for the legend.
                                </div>
                                <div class="chart-container">
                                    <canvas id="htmlLegendsChart"></canvas>
                                </div>
                                <div id="myChartLegend"></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

      </div>

    <!-- Custom template | don't include it in your project! -->
    <div class="custom-template">
        <div class="title">Settings</div>
        <div class="custom-content">
            <div class="switcher">
                <div class="switch-block">
                    <h4>Logo Header</h4>
                    <div class="btnSwitch">
                        <button type="button"
                                class="selected changeLogoHeaderColor"
                                data-color="dark"></button>
                        <button type="button"
                                class="selected changeLogoHeaderColor"
                                data-color="blue"></button>
                        <button type="button"
                                class="changeLogoHeaderColor"
                                data-color="purple"></button>
                        <button type="button"
                                class="changeLogoHeaderColor"
                                data-color="light-blue"></button>
                        <button type="button"
                                class="changeLogoHeaderColor"
                                data-color="green"></button>
                        <button type="button"
                                class="changeLogoHeaderColor"
                                data-color="orange"></button>
                        <button type="button"
                                class="changeLogoHeaderColor"
                                data-color="red"></button>
                        <button type="button"
                                class="changeLogoHeaderColor"
                                data-color="white"></button>
                        <br />
                        <button type="button"
                                class="changeLogoHeaderColor"
                                data-color="dark2"></button>
                        <button type="button"
                                class="changeLogoHeaderColor"
                                data-color="blue2"></button>
                        <button type="button"
                                class="changeLogoHeaderColor"
                                data-color="purple2"></button>
                        <button type="button"
                                class="changeLogoHeaderColor"
                                data-color="light-blue2"></button>
                        <button type="button"
                                class="changeLogoHeaderColor"
                                data-color="green2"></button>
                        <button type="button"
                                class="changeLogoHeaderColor"
                                data-color="orange2"></button>
                        <button type="button"
                                class="changeLogoHeaderColor"
                                data-color="red2"></button>
                    </div>
                </div>
                <div class="switch-block">
                    <h4>Navbar Header</h4>
                    <div class="btnSwitch">
                        <button type="button"
                                class="changeTopBarColor"
                                data-color="dark"></button>
                        <button type="button"
                                class="changeTopBarColor"
                                data-color="blue"></button>
                        <button type="button"
                                class="changeTopBarColor"
                                data-color="purple"></button>
                        <button type="button"
                                class="changeTopBarColor"
                                data-color="light-blue"></button>
                        <button type="button"
                                class="changeTopBarColor"
                                data-color="green"></button>
                        <button type="button"
                                class="changeTopBarColor"
                                data-color="orange"></button>
                        <button type="button"
                                class="changeTopBarColor"
                                data-color="red"></button>
                        <button type="button"
                                class="changeTopBarColor"
                                data-color="white"></button>
                        <br />
                        <button type="button"
                                class="changeTopBarColor"
                                data-color="dark2"></button>
                        <button type="button"
                                class="selected changeTopBarColor"
                                data-color="blue2"></button>
                        <button type="button"
                                class="changeTopBarColor"
                                data-color="purple2"></button>
                        <button type="button"
                                class="changeTopBarColor"
                                data-color="light-blue2"></button>
                        <button type="button"
                                class="changeTopBarColor"
                                data-color="green2"></button>
                        <button type="button"
                                class="changeTopBarColor"
                                data-color="orange2"></button>
                        <button type="button"
                                class="changeTopBarColor"
                                data-color="red2"></button>
                    </div>
                </div>
                <div class="switch-block">
                    <h4>Sidebar</h4>
                    <div class="btnSwitch">
                        <button type="button"
                                class="selected changeSideBarColor"
                                data-color="white"></button>
                        <button type="button"
                                class="changeSideBarColor"
                                data-color="dark"></button>
                        <button type="button"
                                class="changeSideBarColor"
                                data-color="dark2"></button>
                    </div>
                </div>
            </div>
        </div>
        <div class="custom-toggle">
            <i class="icon-settings"></i>
        </div>
    </div>
    <!-- End Custom template -->
    </div>
    <!--   Core JS Files   -->
    <script src="/kaiadmin-lite-1.2.0/assets/js/core/jquery-3.7.1.min.js"></script>
    <script src="/kaiadmin-lite-1.2.0/assets/js/core/popper.min.js"></script>
    <script src="/kaiadmin-lite-1.2.0/assets/js/core/bootstrap.min.js"></script>
    <!-- Chart JS -->
    <script src="/kaiadmin-lite-1.2.0/assets/js/plugin/chart.js/chart.min.js"></script>
    <!-- jQuery Scrollbar -->
    <script src="/kaiadmin-lite-1.2.0/assets/js/plugin/jquery-scrollbar/jquery.scrollbar.min.js"></script>
    <!-- Kaiadmin JS -->
    <script src="/kaiadmin-lite-1.2.0/assets/js/kaiadmin.min.js"></script>
    <!-- Kaiadmin DEMO methods, don't include it in your project! -->
    <script src="/kaiadmin-lite-1.2.0/assets/js/setting-demo2.js"></script>
    <script>
        var radarChart = document.getElementById("radarChart").getContext("2d"),
          // bubbleChart = document.getElementById("bubbleChart").getContext("2d"),
          multipleLineChart = document
            .getElementById("multipleLineChart")
            .getContext("2d"),
          // multipleBarChart = document
          //   .getElementById("multipleBarChart")
          //   .getContext("2d"),
          htmlLegendsChart = document
            .getElementById("htmlLegendsChart")
            .getContext("2d");


        var myRadarChart = new Chart(radarChart, {
          type: "radar",
          data: {
            labels: ["Running", "Swimming", "Eating", "Cycling", "Jumping"],
            datasets: [
              {
                data: [20, 10, 30, 2, 30],
                borderColor: "#1d7af3",
                backgroundColor: "rgba(29, 122, 243, 0.25)",
                pointBackgroundColor: "#1d7af3",
                pointHoverRadius: 4,
                pointRadius: 3,
                label: "Team 1",
              },
              {
                data: [10, 20, 15, 30, 22],
                borderColor: "#716aca",
                backgroundColor: "rgba(113, 106, 202, 0.25)",
                pointBackgroundColor: "#716aca",
                pointHoverRadius: 4,
                pointRadius: 3,
                label: "Team 2",
              },
            ],
          },
          options: {
            responsive: true,
            maintainAspectRatio: false,
            legend: {
              position: "bottom",
            },
          },
        });

        // var myBubbleChart = new Chart(bubbleChart, {
        //   type: "bubble",
        //   data: {
        //     datasets: [
        //       {
        //         label: "Car",
        //         data: [
        //           { x: 25, y: 17, r: 25 },
        //           { x: 30, y: 25, r: 28 },
        //           { x: 35, y: 30, r: 8 },
        //         ],
        //         backgroundColor: "#716aca",
        //       },
        //       {
        //         label: "Motorcycles",
        //         data: [
        //           { x: 10, y: 17, r: 20 },
        //           { x: 30, y: 10, r: 7 },
        //           { x: 35, y: 20, r: 10 },
        //         ],
        //         backgroundColor: "#1d7af3",
        //       },
        //     ],
        //   },
        //   options: {
        //     responsive: true,
        //     maintainAspectRatio: false,
        //     legend: {
        //       position: "bottom",
        //     },
        //     scales: {
        //       yAxes: [
        //         {
        //           ticks: {
        //             beginAtZero: true,
        //           },
        //         },
        //       ],
        //       xAxes: [
        //         {
        //           ticks: {
        //             beginAtZero: true,
        //           },
        //         },
        //       ],
        //     },
        //   },
        // });

        var myMultipleLineChart = new Chart(multipleLineChart, {
          type: "line",
          data: {
            labels: [
              "Jan",
              "Feb",
              "Mar",
              "Apr",
              "May",
              "Jun",
              "Jul",
              "Aug",
              "Sep",
              "Oct",
              "Nov",
              "Dec",
            ],
            datasets: [
              {
                label: "Python",
                borderColor: "#1d7af3",
                pointBorderColor: "#FFF",
                pointBackgroundColor: "#1d7af3",
                pointBorderWidth: 2,
                pointHoverRadius: 4,
                pointHoverBorderWidth: 1,
                pointRadius: 4,
                backgroundColor: "transparent",
                fill: true,
                borderWidth: 2,
                data: [30, 45, 45, 68, 69, 90, 100, 158, 177, 200, 245, 256],
              },
              {
                label: "PHP",
                borderColor: "#59d05d",
                pointBorderColor: "#FFF",
                pointBackgroundColor: "#59d05d",
                pointBorderWidth: 2,
                pointHoverRadius: 4,
                pointHoverBorderWidth: 1,
                pointRadius: 4,
                backgroundColor: "transparent",
                fill: true,
                borderWidth: 2,
                data: [10, 20, 55, 75, 80, 48, 59, 55, 23, 107, 60, 87],
              },
              {
                label: "Ruby",
                borderColor: "#f3545d",
                pointBorderColor: "#FFF",
                pointBackgroundColor: "#f3545d",
                pointBorderWidth: 2,
                pointHoverRadius: 4,
                pointHoverBorderWidth: 1,
                pointRadius: 4,
                backgroundColor: "transparent",
                fill: true,
                borderWidth: 2,
                data: [10, 30, 58, 79, 90, 105, 117, 160, 185, 210, 185, 194],
              },
            ],
          },
          options: {
            responsive: true,
            maintainAspectRatio: false,
            legend: {
              position: "top",
            },
            tooltips: {
              bodySpacing: 4,
              mode: "nearest",
              intersect: 0,
              position: "nearest",
              xPadding: 10,
              yPadding: 10,
              caretPadding: 10,
            },
            layout: {
              padding: { left: 15, right: 15, top: 15, bottom: 15 },
            },
          },
        });

        // var myMultipleBarChart = new Chart(multipleBarChart, {
        //   type: "bar",
        //   data: {
        //     labels: [
        //       "Jan",
        //       "Feb",
        //       "Mar",
        //       "Apr",
        //       "May",
        //       "Jun",
        //       "Jul",
        //       "Aug",
        //       "Sep",
        //       "Oct",
        //       "Nov",
        //       "Dec",
        //     ],
        //     datasets: [
        //       {
        //         label: "First time visitors",
        //         backgroundColor: "#59d05d",
        //         borderColor: "#59d05d",
        //         data: [95, 100, 112, 101, 144, 159, 178, 156, 188, 190, 210, 245],
        //       },
        //       {
        //         label: "Visitors",
        //         backgroundColor: "#fdaf4b",
        //         borderColor: "#fdaf4b",
        //         data: [
        //           145, 256, 244, 233, 210, 279, 287, 253, 287, 299, 312, 356,
        //         ],
        //       },
        //       {
        //         label: "Pageview",
        //         backgroundColor: "#177dff",
        //         borderColor: "#177dff",
        //         data: [
        //           185, 279, 273, 287, 234, 312, 322, 286, 301, 320, 346, 399,
        //         ],
        //       },
        //     ],
        //   },
        //   options: {
        //     responsive: true,
        //     maintainAspectRatio: false,
        //     legend: {
        //       position: "bottom",
        //     },
        //     title: {
        //       display: true,
        //       text: "Traffic Stats",
        //     },
        //     tooltips: {
        //       mode: "index",
        //       intersect: false,
        //     },
        //     responsive: true,
        //     scales: {
        //       xAxes: [
        //         {
        //           stacked: true,
        //         },
        //       ],
        //       yAxes: [
        //         {
        //           stacked: true,
        //         },
        //       ],
        //     },
        //   },
        // });

        // Chart with HTML Legends

        var gradientStroke = htmlLegendsChart.createLinearGradient(
          500,
          0,
          100,
          0
        );
        gradientStroke.addColorStop(0, "#177dff");
        gradientStroke.addColorStop(1, "#80b6f4");

        var gradientFill = htmlLegendsChart.createLinearGradient(500, 0, 100, 0);
        gradientFill.addColorStop(0, "rgba(23, 125, 255, 0.7)");
        gradientFill.addColorStop(1, "rgba(128, 182, 244, 0.3)");

        var gradientStroke2 = htmlLegendsChart.createLinearGradient(
          500,
          0,
          100,
          0
        );
        gradientStroke2.addColorStop(0, "#f3545d");
        gradientStroke2.addColorStop(1, "#ff8990");

        var gradientFill2 = htmlLegendsChart.createLinearGradient(500, 0, 100, 0);
        gradientFill2.addColorStop(0, "rgba(243, 84, 93, 0.7)");
        gradientFill2.addColorStop(1, "rgba(255, 137, 144, 0.3)");

        var gradientStroke3 = htmlLegendsChart.createLinearGradient(
          500,
          0,
          100,
          0
        );
        gradientStroke3.addColorStop(0, "#fdaf4b");
        gradientStroke3.addColorStop(1, "#ffc478");

        var gradientFill3 = htmlLegendsChart.createLinearGradient(500, 0, 100, 0);
        gradientFill3.addColorStop(0, "rgba(253, 175, 75, 0.7)");
        gradientFill3.addColorStop(1, "rgba(255, 196, 120, 0.3)");

        var myHtmlLegendsChart = new Chart(htmlLegendsChart, {
          type: "line",
          data: {
            labels: [
              "Jan",
              "Feb",
              "Mar",
              "Apr",
              "May",
              "Jun",
              "Jul",
              "Aug",
              "Sep",
              "Oct",
              "Nov",
              "Dec",
            ],
            datasets: [
              {
                label: "Subscribers",
                borderColor: gradientStroke2,
                pointBackgroundColor: gradientStroke2,
                pointRadius: 0,
                backgroundColor: gradientFill2,
                legendColor: "#f3545d",
                fill: true,
                borderWidth: 1,
                data: [
                  154, 184, 175, 203, 210, 231, 240, 278, 252, 312, 320, 374,
                ],
              },
              {
                label: "New Visitors",
                borderColor: gradientStroke3,
                pointBackgroundColor: gradientStroke3,
                pointRadius: 0,
                backgroundColor: gradientFill3,
                legendColor: "#fdaf4b",
                fill: true,
                borderWidth: 1,
                data: [
                  256, 230, 245, 287, 240, 250, 230, 295, 331, 431, 456, 521,
                ],
              },
              {
                label: "Active Users",
                borderColor: gradientStroke,
                pointBackgroundColor: gradientStroke,
                pointRadius: 0,
                backgroundColor: gradientFill,
                legendColor: "#177dff",
                fill: true,
                borderWidth: 1,
                data: [
                  542, 480, 430, 550, 530, 453, 380, 434, 568, 610, 700, 900,
                ],
              },
            ],
          },
          options: {
            responsive: true,
            maintainAspectRatio: false,
            legend: {
              display: false,
            },
            tooltips: {
              bodySpacing: 4,
              mode: "nearest",
              intersect: 0,
              position: "nearest",
              xPadding: 10,
              yPadding: 10,
              caretPadding: 10,
            },
            layout: {
              padding: { left: 15, right: 15, top: 15, bottom: 15 },
            },
            scales: {
              yAxes: [
                {
                  ticks: {
                    fontColor: "rgba(0,0,0,0.5)",
                    fontStyle: "500",
                    beginAtZero: false,
                    maxTicksLimit: 5,
                    padding: 20,
                  },
                  gridLines: {
                    drawTicks: false,
                    display: false,
                  },
                },
              ],
              xAxes: [
                {
                  gridLines: {
                    zeroLineColor: "transparent",
                  },
                  ticks: {
                    padding: 20,
                    fontColor: "rgba(0,0,0,0.5)",
                    fontStyle: "500",
                  },
                },
              ],
            },
            legendCallback: function (chart) {
              var text = [];
              text.push('<ul class="' + chart.id + '-legend html-legend">');
              for (var i = 0; i < chart.data.datasets.length; i++) {
                text.push(
                  '<li><span style="background-color:' +
                    chart.data.datasets[i].legendColor +
                    '"></span>'
                );
                if (chart.data.datasets[i].label) {
                  text.push(chart.data.datasets[i].label);
                }
                text.push("</li>");
              }
              text.push("</ul>");
              return text.join("");
            },
          },
        });

        var myLegendContainer = document.getElementById("myChartLegend");

        // generate HTML legend
        myLegendContainer.innerHTML = myHtmlLegendsChart.generateLegend();

        // bind onClick event to all LI-tags of the legend
        var legendItems = myLegendContainer.getElementsByTagName("li");
        for (var i = 0; i < legendItems.length; i += 1) {
          legendItems[i].addEventListener("click", legendClickCallback, false);
        }
    </script>
</body>
</html>
